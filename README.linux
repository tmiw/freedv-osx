README.linux for fdmdv2
Created by David Rowe
Oct 14 2012

Linux usage Notes
=================

1. Config is stored in ~/.FreeDV, rm this file to restore defaults


BUILDING FreeDV for Linux
=========================

1  FreeDV was developed on Ubuntu 9.1 and 10.04 systems.  I installed the
   Ubuntu packages:

     libsamplerate, libsamplerate-dev
     libsndfile1, libsndfile1-dev

2. Some people have also reported needing libasound and libasound_dev (and -lasound in
   the linker line of Makefile.linux)

3. Then build the other libraries below from source. At present the
   way each package is built and installed is not consistent.  Some
   are installed with "make install", others are pointed to via
   Makefile variables.  

4. You may need to edit the Makefile.linux variables for your system:

   WX_GTK_PATH
   CODEC2_PATH
   SOX_LIB_PATH

wxWidgets
---------

1. Download wxWidgets 2.9.4 or later and untar

2. Install GTK development files (e.g. on Ubuntu libgtk2.0-dev)

3. Build the gtk version:

   $ cd wxWidgets-2.9.4
   $ mkdir build_gtk
   $ cd build_gtk
   $ ../configure
   $ make

4. You don't actually have to "make install" wxWidgets (unless you
   really want to), it can be used by fdmdv2 out of the directory you
   build it in.

Portaudio
---------

1. Make sure ALSA development support (libasound and headers) is
   present.  Portaudio will work with OSS but I found I couldn't
   adjust the mic gain using OSS.  On a modern version of Ubuntu the
   ALSA libs can be installed with:

     sudo apt-get install libasound-dev

   Note I had problems with the ALSA development library on Ubuntu
   9.10, so used OSS and put up with not being able to adjust the mic
   gain.

2. Download and untar pa_stable_V19

3. Configure with C++ enabled:

   $ ./configure --enable-cxx

   <snip>:

   Configuration summary:

       Target ...................... i686-pc-linux-gnu
       C++ bindings ................ yes
       Debug output ................ no

       ALSA ........................ yes
       ASIHPI ...................... no

       OSS ......................... yes
       JACK ........................ no

4. $ make

5. You can test Portaudio with bin/pa_devs & bin/patest_sine8.

6. I used a "sudo make install", and removed the default Unbuntu
   portaudio libs as they were an earlier version.  It's probably
   possible to build fdmdv2 without "make install", by passing
   --prefix to the ./configure stage.

libsox
------

We use some of the internal sox functions for the equaliser feature.

wget http://sourceforge.net/projects/sox/files/sox/14.4.0/sox-14.4.0.tar.gz/download
tar xvzf sox-14.4.0.tar.gz
cd sox-14.4.0

Now we only want to use a few internal functions of sox.  This
configure line mkes sure we don't build in unneeded depednancies:

sox-14.4.0$ ./configure --enable-shared=no --without-id3tag --without-png --disable-gomp --with-oggvorbis=no --with-oss=no --with-flac=no --disable-dl-sndfile

sox-14.4.0$ make

libctb (Communications Toolbox)
-------------------------------

$ wget https://iftools.com/download/ctb/0.16/libctb-0.16.tar.gz
$ tar xvzf libctb-0.16.tar.gz
$ cd libctb-0.16/build
build$ make
build$ sudo make install

I found the "sudo make DEBUG=0 GPIB=0 install" didn't install the kbhit.h file:

build$ sudo cp ../include/ctb-0.16/kbhit.h /usr/local/include/ctb-0.16
build$ sudo ldconfig

codec2-dev
----------

1. See codec2-dev/README. No need to "make install"

fdmdv2
------

1. svn co https://freetel.svn.sourceforge.net/svnroot/freetel/fdmdv2

2. Modify the paths at the top of src/Makefile.linux for wxWidgets and codec2-dev

3. 
   cd fdmdv2/src 
   make -f Makefile.linux


TODO
====

[ ] Stopping Waterfall
    + When Stop pressed lower 25% of Waterfall isn't erased
[X] Axis labels on Waterfall incorrect
[ ] CPU load very high for waterfall, proportional to screen size
[X] resizing Waterfall
    + bit map is used for memory of waterfall, so resizing will cause some
      probs as previous memory will be for a different size
    + so if we resize, need to delete old memory, zero new bit map
[ ] minimum window size so we don't lose buttons and get waterfall/spectrum text
    pressed together
[ ] tell take lights for over/underflow realtime type issues
[ ] lights for clipping of audio input/ouput
    + level gauge?

[ ] release clean up
    [X] bug in record file on Win32
    [X] svn version tag?
        + i.e. 1.0 etc rather than number
    [ ] waterfall
        + is graticule useful
        + peaks showing
        + showing fades properly
    [ ] record/play dialogs layout
    [ ] remove/comment out debug printfs
    [ ] Credits: Mel, Tapr, Bruce,  Peter M, cesco, Dave W
    [ ] linux version
    [ ] help about with URL (hyperlink?) to web site
    [ ] do we keep/put effort into getting working ./configure && Makefile?
    [ ] test with simulated AWGN/burst error channels
        + see if sync needs tuning to not fall over too quickly
        + nasty noises
    [ ] buffer sizes, maybe make a config number
    [ ] read comments and make sure they are still valid
    [ ] tool tip help for audio config dialog
    [ ] something sensible with disabling rx when tx button is pressed?        
    [ ] tx/rx muting for half duplex
        + dont want funny sounds during tx
    [ ] setup doc
    [ ] Donate button with hyperlink from about dialog or help menu?

IDEAS
=====

1. Tabbed page option that draws block diagram of system and draws
   line between sound devices and modem blocks.  Lines move depending
   if we are in sync, audio pass thru etc

2. Way to I/O to/from files on each "port", for example:
   + monitor input speech or feed input speech

3. (Thomas Kocourek n4fwd) Context senditive help.

4. Look at how people hook up and use program, stop common mistakes or assumptions

5. speech Waveform I/O.  Look for clipping

6. Should SNR (i) respond more quickly (ii) be smoother with less
   variation for a continuous signal?

7. Look at performance with channels with impulsive noise or fading.
   Does it lose sync too easily?  Should it track thru a few frames of
   fading?  For example if sync sequcne lost we could mute but not do
   coarse freq for a few frames.

8. Simulate channel errors including QRM of an adjacent SSB signal.
   How can we detect partial obscuring of tones and what do we do?

9. Squelch implementation.  Effect of SNR bouncing around might be to
   have audio cut in and out.  We might need a better way of
   triggering mute, such as amplitude of pilots, or smoother SNR.  Or
   hysteresis in Squelch.

Test Plan
---------

1. Remove ~/.FDMDV and do a fresh install

User Manual Notes
-----------------

Count 5 seconds when removing/installing USB sound devices before
pressing refesh.

Describe what a valid one card and two card configuration looks like.
Draw a block diagram, image of set up dialog.

What a good scatter diagram/spectrum looks like

Setting up in audio loopback

Explain one and two soundcard modes

Right click drag tabs, new window, tab order
